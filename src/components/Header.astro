---
import '../styles/header.css';

// Get current page or section to determine active tab
const currentPath = Astro.url.pathname;

// Número configurable (usa PUBLIC_PHONE si está en .env, sino usa el valor por defecto)
const PHONE = import.meta.env.PUBLIC_PHONE ?? '+56 9 5478 7021';
const PHONE_HREF = PHONE.replace(/[^+\d+]/g, '');

// Determine which tab should be active based on current path
let activeTab = 'inicio';
if (currentPath === '/') {
    activeTab = 'inicio';
} else if (currentPath.startsWith('/servicios')) {
    activeTab = 'servicios';
} else if (currentPath.startsWith('/quienes-somos')) {
    activeTab = 'quienes-somos';
} else if (currentPath.startsWith('/faq')) {
    activeTab = 'faq';
} else if (currentPath.startsWith('/trabaja-con-nosotros')) {
    activeTab = 'trabaja-con-nosotros';
}
---

<header class="animate-on-scroll slide-in-down">
    <div class="nav-container">
        <!-- Logo and mobile slogan section -->
        <div class="logo-mobile-wrapper">
            <div class="logo-section">
                <a href="/">
                    <img src="/logo.png" alt="Stop CAE logo featuring bold red and black text with a stylized legal scale symbol, conveying professionalism and determination; the logo is set against a clean white background, evoking trust and support for students facing debt" class="logo hover-pulse">
                </a>
                <!-- Número de teléfono móvil -->
                <a href={`tel:${PHONE_HREF}`} class="mobile-phone-link" aria-label={`Llamar ${PHONE}`}>
                    <i class="fas fa-phone"></i>
                    <span class="mobile-phone-number">{PHONE}</span>
                </a>
            </div>
            <!-- Mobile-only slogan -->
            <p class="mobile-slogan">Transformamos tu deuda estudiantil en el impulso para tus próximos proyectos</p>
        </div>
        
        <!-- Header content next to logo -->
        <div class="header-content">
            <!-- First row with contact info -->
            <div class="header-top">
                <div class="contact-info">
                    <a href={`tel:${PHONE_HREF}`} class="phone-link" aria-label={`Llamar ${PHONE}`}>
                        <i class="fas fa-phone"></i>
                        <span class="call-text">Llámanos</span>
                        <span class="phone-number">{PHONE}</span>
                    </a>
                </div>
            </div>
            
            <!-- Second row with slogan (desktop only) -->
            <div class="header-middle">
                <p class="slogan">Transformamos tu deuda estudiantil en el impulso para tus próximos proyectos</p>
            </div>
            
            <!-- Third row with navigation -->
            <div class="header-bottom">
                <button class="menu-toggle" id="menu-toggle" aria-label="Toggle Menu">
                    <i class="fas fa-bars"></i>
                </button>
                <nav>
                    <ul class="nav-menu" id="nav-menu">
                        <li><a href="/" class={`nav-link animate-on-scroll fade-in-up ${activeTab === 'inicio' ? 'active' : ''}`} data-section="inicio">Inicio</a></li>
                        <li><a href="/servicios" class={`nav-link animate-on-scroll fade-in-up ${activeTab === 'servicios' ? 'active' : ''}`} data-section="servicios">Servicios</a></li>
                        <li><a href="/quienes-somos" class={`nav-link animate-on-scroll fade-in-up ${activeTab === 'quienes-somos' ? 'active' : ''}`} data-section="quienes-somos">Quienes Somos</a></li>
                        <li><a href="/faq" class={`nav-link animate-on-scroll fade-in-up ${activeTab === 'faq' ? 'active' : ''}`} data-section="faq">FAQ</a></li>
                        <li><a href="/trabaja-con-nosotros" class={`nav-link animate-on-scroll fade-in-up ${activeTab === 'trabaja-con-nosotros' ? 'active' : ''}`} data-section="trabaja-con-nosotros">Trabaja con Nosotros</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</header>

<style>
    /* Estilos para el wrapper del logo y slogan en móvil */
    .logo-mobile-wrapper {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        transition: all 0.3s ease;
    }
    
    /* Estilo mejorado para el número de teléfono móvil */
    .mobile-phone-link {
        display: none;
        color: #c0392b;
        text-decoration: none;
        font-weight: bold;
        font-size: 14px;
        align-items: center;
        gap: 6px;
        padding: 8px 12px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.95);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        white-space: nowrap;
        min-width: auto;
        flex-shrink: 0;
    }
    
    /* Eliminada la animación del ícono */
    .mobile-phone-link i {
        font-size: 16px;
        /* animación eliminada */
        vertical-align: middle; /* Mejor alineación vertical */
    }
    
    .mobile-phone-number {
        vertical-align: middle; /* Alinear con el ícono */
        display: inline-flex;
        align-items: center;
    }
    
    /* Estilo mejorado para el teléfono en desktop */
    .contact-info .phone-link {
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }
    
    .contact-info i {
        /* animación eliminada */
        vertical-align: middle;
    }
    
    .contact-info .call-text,
    .contact-info .phone-number {
        vertical-align: middle;
    }
    
    /* Asegurar que el teléfono esté siempre visible y fijo al lado del logo */
    header.scrolled .mobile-phone-link {
        /* Eliminar el display: flex !important que lo hace visible en escritorio */
        font-size: 14px !important;
        padding: 8px 12px !important;
        gap: 6px !important;
        position: relative !important;
    }
    
    /* Añade esta regla específica para móvil */
    @media (max-width: 768px) {
        /* ... otros estilos móviles ... */
        
        header.scrolled .mobile-phone-link {
            display: flex !important; /* Solo aplicar display: flex en móvil */
        }
    }
    
    /* Mantener la estructura del logo-section siempre */
    header.scrolled .logo-section {
        display: flex !important;
        justify-content: space-between !important;
        align-items: center !important;
        width: 100% !important;
    }
    
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
    }
    
    /* Slogan para móvil (oculto por defecto) */
    .mobile-slogan {
        display: none;
        font-size: 14px;
        font-style: italic;
        color: #ffffffff;
        margin: 5px 0 0 0;
        max-width: 250px;
        text-align: left;
        line-height: 1.3;
        transition: all 0.3s ease;
    }
    
    /* Ocultar los lemas cuando el header está en estado scrolled */
    header.scrolled .mobile-slogan,
    header.scrolled .header-middle,
    header.scrolled .slogan {
        display: none;
        opacity: 0;
        height: 0;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }
    
    header.scrolled .logo {
        max-width: 100px;
        transition: all 0.3s ease;
    }
    
    /* Media queries para móvil */
    @media (max-width: 768px) {
        .logo-mobile-wrapper {
            padding: 10px;
        }
        
        .logo-section {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 5px;
        }
        
        .mobile-phone-link {
            display: flex;
        }
        
        .mobile-slogan {
            display: block;
            animation: fadeIn 0.8s ease-in-out;
        }
        
        header.scrolled .logo-mobile-wrapper {
            padding: 5px;
        }
        
        .header-middle {
            display: none; /* Oculta el slogan en desktop */
        }
        
        .nav-container {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .logo-section {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            max-width: 120px;
        }
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<script>
    // Mobile menu toggle functionality
    document.addEventListener('DOMContentLoaded', () => {
        const menuToggle = document.getElementById('menu-toggle');
        const navMenu = document.getElementById('nav-menu');
        
        if (menuToggle && navMenu) {
            menuToggle.addEventListener('click', () => {
                navMenu.classList.toggle('active');
                // Change icon based on menu state
                const icon = menuToggle.querySelector('i');
                if (icon) {
                    if (navMenu.classList.contains('active')) {
                        icon.classList.remove('fa-bars');
                        icon.classList.add('fa-times');
                    } else {
                        icon.classList.remove('fa-times');
                        icon.classList.add('fa-bars');
                    }
                }
            });
            
            // Close menu when clicking on links
            const menuLinks = navMenu.querySelectorAll('a');
            menuLinks.forEach(link => {
                link.addEventListener('click', () => {
                    navMenu.classList.remove('active');
                    const icon = menuToggle.querySelector('i');
                    if (icon) {
                        icon.classList.remove('fa-times');
                        icon.classList.add('fa-bars');
                    }
                });
            });
        }
        
        // Active tab functionality
        const navLinks = document.querySelectorAll('.nav-link');
        
        // Function to set active tab based on current URL
        function setActiveTab() {
            const currentPath = window.location.pathname;
            let currentSection = 'inicio';
            
            if (currentPath === '/') {
                currentSection = 'inicio';
            } else if (currentPath.startsWith('/servicios')) {
                currentSection = 'servicios';
            } else if (currentPath.startsWith('/quienes-somos')) {
                currentSection = 'quienes-somos';
            } else if (currentPath.startsWith('/faq')) {
                currentSection = 'faq';
            } else if (currentPath.startsWith('/trabaja-con-nosotros')) {
                currentSection = 'trabaja-con-nosotros';
            }
            
            // Update active tab
            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('data-section') === currentSection) {
                    link.classList.add('active');
                }
            });
        }
        
        // Header scroll effect
        function handleHeaderScroll() {
            const header = document.querySelector('header');
            if (header) {
                if (window.scrollY > 100) {
                    header.classList.add('scrolled');
                } else {
                    header.classList.remove('scrolled');
                }
            }
        }

        // Smooth scroll to section with snap behavior
        function smoothScrollToSection(sectionId) {
            const section = document.querySelector(`#${sectionId}`);
            if (section) {
                const targetPosition = section.offsetTop;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        }

        // Auto-navigation based on scroll direction and position
        let lastScrollTop = 0;
        let scrollTimeout;
        
        function handleSmartScroll() {
            const currentScrollTop = window.scrollY;
            const scrollDirection = currentScrollTop > lastScrollTop ? 'down' : 'up';
            const scrollDistance = Math.abs(currentScrollTop - lastScrollTop);
            
            // Only trigger auto-navigation for significant scrolls
            if (scrollDistance > 30) {
                clearTimeout(scrollTimeout);
                
                scrollTimeout = setTimeout(() => {
                    const sections = document.querySelectorAll('section[id]');
                    const currentPosition = currentScrollTop + 50;
                    
                    let targetSection = null;
                    
                    if (scrollDirection === 'down') {
                        // Find next section
                        for (let i = 0; i < sections.length; i++) {
                            if (sections[i].offsetTop > currentPosition) {
                                targetSection = sections[i];
                                break;
                            }
                        }
                    } else {
                        // Find previous section
                        for (let i = sections.length - 1; i >= 0; i--) {
                            if (sections[i].offsetTop < currentPosition) {
                                targetSection = sections[i];
                                break;
                            }
                        }
                    }
                    
                    // Auto-scroll to target section if found
                    if (targetSection && scrollDistance > 50) {
                        const targetId = targetSection.getAttribute('id');
                        smoothScrollToSection(targetId);
                    }
                }, 100); // Reduced delay for more responsive navigation
            }
            
            lastScrollTop = currentScrollTop;
        }
        
        // Update scroll indicator
        function updateScrollIndicator() {
            const scrollDots = document.querySelectorAll('.scroll-dot');
            const scrollPosition = window.scrollY + 100;
            
            scrollDots.forEach(dot => {
                const sectionId = dot.getAttribute('data-section');
                const section = document.querySelector(`#${sectionId}`);
                
                if (section) {
                    const sectionTop = section.offsetTop;
                    const sectionBottom = sectionTop + section.offsetHeight;
                    
                    if (scrollPosition >= sectionTop && scrollPosition < sectionBottom) {
                        dot.classList.add('active');
                    } else {
                        dot.classList.remove('active');
                    }
                }
            });
        }

        // Handle scroll dot clicks
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('scroll-dot')) {
                const sectionId = e.target.getAttribute('data-section');
                smoothScrollToSection(sectionId);
            }
        });
        
        // Set active tab on scroll and navigation
        window.addEventListener('scroll', () => {
            handleHeaderScroll();
            handleSmartScroll();
            updateScrollIndicator();
        });
        
        // Listen for navigation changes (for SPA-like behavior)
        window.addEventListener('popstate', () => {
            setActiveTab();
        });
        
        // Set initial active tab and header state
        setActiveTab();
        handleHeaderScroll();
        updateScrollIndicator();
        
        // Set active tab on click and update based on navigation
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                // Remove active class from all links
                navLinks.forEach(l => l.classList.remove('active'));
                // Add active class to clicked link
                link.classList.add('active');
                
                // Update active tab based on the new URL after navigation
                setTimeout(() => {
                    setActiveTab();
                }, 100);
            });
        });
    });
</script>
