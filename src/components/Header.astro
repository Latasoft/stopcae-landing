---
import '../styles/header.css';

// Get current page or section to determine active tab
const currentPath = Astro.url.pathname;
---

<header>
    <div class="nav-container">
        <!-- Logo on the left -->
        <div class="logo-section">
            <img src="/logo.png" alt="Stop CAE logo featuring bold red and black text with a stylized legal scale symbol, conveying professionalism and determination; the logo is set against a clean white background, evoking trust and support for students facing debt" class="logo">
        </div>
        
        <!-- Header content next to logo -->
        <div class="header-content">
            <!-- First row with contact info -->
            <div class="header-top">
                <div class="contact-info">
                    <i class="fas fa-phone"></i> +56 9 5409 9974
                </div>
            </div>
            
            <!-- Second row with slogan -->
            <div class="header-middle">
                <p class="slogan">Transformamos tu deuda estudiantil en el impulso para tus pr√≥ximos proyectos</p>
            </div>
            
            <!-- Third row with navigation -->
            <div class="header-bottom">
                <button class="menu-toggle" id="menu-toggle" aria-label="Toggle Menu">
                    <i class="fas fa-bars"></i>
                </button>
                <nav>
                    <ul class="nav-menu" id="nav-menu">
                        <li><a href="#inicio" class="nav-link" data-section="inicio">Inicio</a></li>
                        <li><a href="#servicios" class="nav-link" data-section="servicios">Servicios</a></li>
                        <li><a href="#quienes-somos" class="nav-link" data-section="quienes-somos">Quienes Somos</a></li>
                        <li><a href="#preguntas" class="nav-link" data-section="preguntas">Preguntas Frecuentes</a></li>
                        <li><a href="#trabaja" class="nav-link" data-section="trabaja">Trabaja con Nosotros</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</header>

<script>
    // Mobile menu toggle functionality
    document.addEventListener('DOMContentLoaded', () => {
        const menuToggle = document.getElementById('menu-toggle');
        const navMenu = document.getElementById('nav-menu');
        
        if (menuToggle && navMenu) {
            menuToggle.addEventListener('click', () => {
                navMenu.classList.toggle('active');
                // Change icon based on menu state
                const icon = menuToggle.querySelector('i');
                if (icon) {
                    if (navMenu.classList.contains('active')) {
                        icon.classList.remove('fa-bars');
                        icon.classList.add('fa-times');
                    } else {
                        icon.classList.remove('fa-times');
                        icon.classList.add('fa-bars');
                    }
                }
            });
            
            // Close menu when clicking on links
            const menuLinks = navMenu.querySelectorAll('a');
            menuLinks.forEach(link => {
                link.addEventListener('click', () => {
                    navMenu.classList.remove('active');
                    const icon = menuToggle.querySelector('i');
                    if (icon) {
                        icon.classList.remove('fa-times');
                        icon.classList.add('fa-bars');
                    }
                });
            });
        }
        
        // Active tab functionality
        const navLinks = document.querySelectorAll('.nav-link');
        
        // Function to set active tab based on current section
        function setActiveTab() {
            const scrollPosition = window.scrollY + 100; // Offset for header height
            
            // Get all sections
            const sections = document.querySelectorAll('section[id]');
            let currentSection = '';
            
            sections.forEach(section => {
                const sectionTop = section.offsetTop;
                const sectionHeight = section.offsetHeight;
                
                if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                    currentSection = section.getAttribute('id');
                }
            });
            
            // Update active tab
            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('data-section') === currentSection) {
                    link.classList.add('active');
                }
            });
            
            // Default to first tab if no section is active
            if (!currentSection && navLinks.length > 0) {
                navLinks[0].classList.add('active');
            }
        }
        
        // Header scroll effect
        function handleHeaderScroll() {
            const header = document.querySelector('header');
            if (header) {
                if (window.scrollY > 100) {
                    header.classList.add('scrolled');
                } else {
                    header.classList.remove('scrolled');
                }
            }
        }

        // Smooth scroll to section with snap behavior
        function smoothScrollToSection(sectionId) {
            const section = document.querySelector(`#${sectionId}`);
            if (section) {
                const targetPosition = section.offsetTop;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        }

        // Auto-navigation based on scroll direction and position
        let lastScrollTop = 0;
        let scrollTimeout;
        
        function handleSmartScroll() {
            const currentScrollTop = window.scrollY;
            const scrollDirection = currentScrollTop > lastScrollTop ? 'down' : 'up';
            const scrollDistance = Math.abs(currentScrollTop - lastScrollTop);
            
            // Only trigger auto-navigation for significant scrolls
            if (scrollDistance > 30) {
                clearTimeout(scrollTimeout);
                
                scrollTimeout = setTimeout(() => {
                    const sections = document.querySelectorAll('section[id]');
                    const currentPosition = currentScrollTop + 50;
                    
                    let targetSection = null;
                    
                    if (scrollDirection === 'down') {
                        // Find next section
                        for (let i = 0; i < sections.length; i++) {
                            if (sections[i].offsetTop > currentPosition) {
                                targetSection = sections[i];
                                break;
                            }
                        }
                    } else {
                        // Find previous section
                        for (let i = sections.length - 1; i >= 0; i--) {
                            if (sections[i].offsetTop < currentPosition) {
                                targetSection = sections[i];
                                break;
                            }
                        }
                    }
                    
                    // Auto-scroll to target section if found
                    if (targetSection && scrollDistance > 50) {
                        const targetId = targetSection.getAttribute('id');
                        smoothScrollToSection(targetId);
                    }
                }, 100); // Reduced delay for more responsive navigation
            }
            
            lastScrollTop = currentScrollTop;
        }
        
        // Update scroll indicator
        function updateScrollIndicator() {
            const scrollDots = document.querySelectorAll('.scroll-dot');
            const scrollPosition = window.scrollY + 100;
            
            scrollDots.forEach(dot => {
                const sectionId = dot.getAttribute('data-section');
                const section = document.querySelector(`#${sectionId}`);
                
                if (section) {
                    const sectionTop = section.offsetTop;
                    const sectionBottom = sectionTop + section.offsetHeight;
                    
                    if (scrollPosition >= sectionTop && scrollPosition < sectionBottom) {
                        dot.classList.add('active');
                    } else {
                        dot.classList.remove('active');
                    }
                }
            });
        }

        // Handle scroll dot clicks
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('scroll-dot')) {
                const sectionId = e.target.getAttribute('data-section');
                smoothScrollToSection(sectionId);
            }
        });
        
        // Set active tab on scroll
        window.addEventListener('scroll', () => {
            setActiveTab();
            handleHeaderScroll();
            handleSmartScroll();
            updateScrollIndicator();
        });
        
        // Set initial active tab and header state
        setActiveTab();
        handleHeaderScroll();
        updateScrollIndicator();
        
        // Set active tab on click
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                navLinks.forEach(l => l.classList.remove('active'));
                link.classList.add('active');
            });
        });
    });
</script>
